/*
Copyright 2018 The Kubernetes sample-controller Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/monasca/alarm-definition-controller/pkg/apis/alarmdefinition/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AlarmDefinitionLister helps list AlarmDefinitions.
type AlarmDefinitionLister interface {
	// List lists all AlarmDefinitions in the indexer.
	List(selector labels.Selector) (ret []*v1.AlarmDefinition, err error)
	// AlarmDefinitions returns an object that can list and get AlarmDefinitions.
	AlarmDefinitions(namespace string) AlarmDefinitionNamespaceLister
	AlarmDefinitionListerExpansion
}

// alarmDefinitionLister implements the AlarmDefinitionLister interface.
type alarmDefinitionLister struct {
	indexer cache.Indexer
}

// NewAlarmDefinitionLister returns a new AlarmDefinitionLister.
func NewAlarmDefinitionLister(indexer cache.Indexer) AlarmDefinitionLister {
	return &alarmDefinitionLister{indexer: indexer}
}

// List lists all AlarmDefinitions in the indexer.
func (s *alarmDefinitionLister) List(selector labels.Selector) (ret []*v1.AlarmDefinition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AlarmDefinition))
	})
	return ret, err
}

// AlarmDefinitions returns an object that can list and get AlarmDefinitions.
func (s *alarmDefinitionLister) AlarmDefinitions(namespace string) AlarmDefinitionNamespaceLister {
	return alarmDefinitionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AlarmDefinitionNamespaceLister helps list and get AlarmDefinitions.
type AlarmDefinitionNamespaceLister interface {
	// List lists all AlarmDefinitions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AlarmDefinition, err error)
	// Get retrieves the AlarmDefinition from the indexer for a given namespace and name.
	Get(name string) (*v1.AlarmDefinition, error)
	AlarmDefinitionNamespaceListerExpansion
}

// alarmDefinitionNamespaceLister implements the AlarmDefinitionNamespaceLister
// interface.
type alarmDefinitionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AlarmDefinitions in the indexer for a given namespace.
func (s alarmDefinitionNamespaceLister) List(selector labels.Selector) (ret []*v1.AlarmDefinition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AlarmDefinition))
	})
	return ret, err
}

// Get retrieves the AlarmDefinition from the indexer for a given namespace and name.
func (s alarmDefinitionNamespaceLister) Get(name string) (*v1.AlarmDefinition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("alarmdefinition"), name)
	}
	return obj.(*v1.AlarmDefinition), nil
}
